apiVersion: v2
name: MetaDefender_for_Secure_Storage
description: This is a Helm chart for deploying MetaDefender for Secure Storage (https://www.opswat.com/products/metadefender/metadefender-for-secure-storage) in a Kubernetes cluster

long_description: |
  This chart can deploy the following depending on the provided values:
  - All MDSS services in separate pods 
  - A MongoDB database instance pre-configured to be used by MD Core

  In addition to the chart, we also provide a number of values files for specific scenarios:
  - mdss-aws-eks-values.yml - for deploying in an AWS environment using Amazon EKS
  - mdss-azure-aks-values.yml - for deploying in an Azure environment using AKS
  - mdss-generic-values.yml - for deploying in a standalone cluster

  ## Installation
  
  ### From source
  MD Core can be installed directly from the source code, here's an example using the generic values:
  ```console
  git clone https://github.com/OPSWAT/metadefender-k8s.git metadefender
  cd metadefender/helm_carts
  helm install my_mdss ./mdss -f mdss-generic-values.yml
  ```

  ### From the latest release
  The installation can also be done using the latest release from github:
  ```console
  helm install my_mdss <MDSS_RELEASE_URL>.tgz -f mdss-generic-values.yml
  ```

  ## Operational Notes
  The entire deployment can be customized by overwriting the chart's default configuration values. Here are a few point to look out for when changing these values:
  - By default, a MongoDB database is deployed alongside the MDSS deployment
  - In a production environment it's recommended to use an external service for the database  and set `deploy_with_mdss_db` to false in order to not deploy an in-cluster database

type: application

version: 2.2.3

dependencies:
- name: aws-load-balancer-controller
  condition: aws-load-balancer-controller.enabled
  version: 1.4.2
  repository: https://aws.github.io/eks-charts
