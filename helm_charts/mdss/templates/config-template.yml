---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.mdss_config_map_env_name }}
data:
  {{- toYaml (index .Values "mdss-common-environment") | nindent 2 }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: webclient-nginx-config
data:
  default.conf: |
    server {
      listen 80 default_server;
      server_name _;
      server_tokens off;

      add_header Referrer-Policy "no-referrer";
      add_header X-Content-Type-Options "nosniff" always;
      add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;
      add_header Strict-Transport-Security "max-age=15724800; includeSubDomains" always;
      #return 301 https://$host$request_uri;

      location / {
        try_files $uri $uri/ /index.html;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
      }

      location /api {
        proxy_pass http://apigateway;
        
        proxy_set_header Host            $host;  
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
        add_header Referrer-Policy "no-referrer" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;
        add_header Strict-Transport-Security "max-age=15724800; includeSubDomains" always;
        
        # Ensure backend error responses pass through to client
        proxy_intercept_errors off;
      }
      

      location /callback {
        proxy_pass http://apigateway/callback;
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
      }


      location /hubs { 
          proxy_pass http://apigateway;
          limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
      }
    }
    server {
      #listen 443 ssl;
      #ssl_certificate /etc/nginx/conf.d/ssl.crt;
      #ssl_certificate_key /etc/nginx/conf.d/ssl.key;
      #ssl_protocols TLSv1.2 TLSv1.3;
      #ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
      #ssl_prefer_server_ciphers on;
      server_tokens off;
      
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer";
      add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;
      add_header Strict-Transport-Security "max-age=15724800; includeSubdomains;" always;

      location / {
        try_files $uri $uri/ /index.html;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
      }

      location /api {
        proxy_pass http://apigateway;

        proxy_set_header Host            $host; 
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
        add_header Referrer-Policy "no-referrer" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;
        add_header Strict-Transport-Security "max-age=15724800; includeSubDomains" always;
        
        # Ensure backend error responses pass through to client
        proxy_intercept_errors off;
      }

      location /callback {
        proxy_pass http://apigateway/callback;
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
      }

      
      location /hubs { 
        proxy_pass http://apigateway;
        limit_except GET POST PUT DELETE PATCH OPTIONS { deny  all; }
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
      }
    }


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  advanced.config: |
    [
      {rabbit, [
        {consumer_timeout, undefined}
      ]},
      {rabbitmq_prometheus, [
        {return_per_object_metrics, true}
      ]}
    ].
  enabled_plugins: |
    [rabbitmq_prometheus,rabbitmq_management].

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: appsettings
data:
  appsettings.json: |
    {
      "Serilog": {
        "Using": [],
        "MinimumLevel": {
          "Default": "Information",
          "Override": {
            "Microsoft": "Warning",
            "System": "Warning",
            "Microsoft.Hosting.Lifetime": "Warning"
          }
        },
        "Enrich": [ "FromLogContext", "WithMachineName", "WithProcessId", "WithProcessName", "WithThreadId" ],
        "WriteTo": [
          {
            "Name": "File",
            "Args": {
              "buffered": false,
              "fileSizeLimitBytes": 500000000,
              "outputTemplate": "[{Timestamp:u}] [{Level}] {Namespace}: {Message:lj}{NewLine}{Exception}",
              "path": "logs/log.txt",
              "retainedFileCountLimit": "10",
              "rollingInterval": "Day",
              "rollOnFileSizeLimit": true
            }
          },
          {
            "Name": "Console",
            "Args": {
              "outputTemplate": "[{Timestamp:u}] [{Level}] {Namespace}: {Message:lj}{NewLine}{Exception}"
            }
          }
        ]
      }
    }
