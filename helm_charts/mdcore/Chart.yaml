apiVersion: v2
name: metadefender_core
description: This is a Helm chart for deploying MetaDefender Core (https://www.opswat.com/products/metadefender/core) in a Kubernetes cluster

long_description: |
  This chart can deploy the following depending on the provided values:
  - One or more MD Core instances 
  - A PostgreSQL database instance pre-configured to be used by MD Core

  In addition to the chart, we also provide a number of values files for specific scenarios:
  - mdcore-aws-eks-values.yml - for deploying in an AWS environment using Amazon EKS
  - mdcore-azure-aks-values.yml - for deploying in an Azure environment using AKS

  ## Installation
  
  ### From source
  MD Core can be installed directly from the source code, here's an example using generic values:
  ```console
  git clone https://github.com/OPSWAT/metadefender-k8s.git metadefender
  cd metadefender/helm_carts
  helm install my_mdcore ./mdcore
  ```

  ### From the GitHub helm repo
  The installation can also be done using the helm repo which is updated on each release:
   ```console
  helm repo add mdk8s https://opswat.github.io/metadefender-k8s/
  helm repo update mdk8s
  helm install my_mdcore mdk8s/metadefender_core
  ```

  ## Operational Notes
  The entire deployment can be customized by overwriting the chart's default configuration values. Here are a few point to look out for when changing these values:
  - Sensitive values (like credentials and keys) are saved in the Kubernetes cluster as secrets and are not deleted when the chart is removed and they can be reused for future deployments
  - Credentials that are not explicitly set (passwords and the api key) and do not already exist as k8s secrets will be randomly generated, if they are set, the respective k8s secret will be updated or created if it doesn't exist
  - **The license key value is mandatory**, if it's left unset or if it's invalid, the MD Core instance will report as "unhealthy" and it will be restarted
  - The configured license should have a sufficient number of activations for all pod running MD Core, each pod counts as 1 activation. Terminating pods will also deactivate the respective MD Core instance.
  - By default, a PostgreSQL database is deployed alongside the MD Core deployment with the same credentials as set in the values file
  - In a production environment it's recommended to use an external service for the database (like Amazon RDS) and set `deploy_with_core_db` to false in order to not deploy an in-cluster database
  - The deployed MD Core pod has a startup container that will wait for a database connection before allowing MD Core to start

  
type: application

version: 5.9.1
