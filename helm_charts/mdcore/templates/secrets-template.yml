
{{- if .Values.mdcore_generate_secrets}}

# Generate, set or keep the postgres database credentials
{{- $postgresPasswordValue := (randAlphaNum 24) | nospace | b64enc | quote }}
{{- $postgresUserValue := "postgres" | b64enc | quote }}
{{- $postgresSecret := (lookup "v1" "Secret" .Release.Namespace "mdcore-postgres-cred") }}

{{- if $postgresSecret }}
{{- $postgresPasswordValue = index $postgresSecret.data "password" }}
{{- $postgresUserValue = index $postgresSecret.data "user" }}
{{- end -}}

{{- if .Values.db_password }}
{{- $postgresPasswordValue = .Values.db_password | b64enc }}
{{- end -}}

{{- if .Values.db_user }}
{{- $postgresUserValue = .Values.db_user | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdcore-postgres-cred
  annotations:
    "helm.sh/resource-policy": keep
data:
  user: {{ $postgresUserValue }}
  password: {{ $postgresPasswordValue }}

---

# Generate, set or keep the MD Core credentials
{{- $corePasswordValue := (randAlphaNum 24) | nospace | b64enc | quote }}
{{- $coreUserValue := "admin" | b64enc | quote }}
{{- $coreCredSecret := (lookup "v1" "Secret" .Release.Namespace "mdcore-cred") }}

{{- if $coreCredSecret }}
{{- $corePasswordValue = index $coreCredSecret.data "password" }}
{{- $coreUserValue = index $coreCredSecret.data "user" }}
{{- end -}}

{{- if .Values.mdcore_password }}
{{- $corePasswordValue = .Values.mdcore_password | b64enc }}
{{- end -}}

{{- if .Values.mdcore_user }}
{{- $coreUserValue = .Values.mdcore_user | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdcore-cred
  annotations:
    "helm.sh/resource-policy": keep
data:
  user: {{ $coreUserValue }}
  password: {{ $corePasswordValue }}

# Generate, set or keep the MD Core API key
{{- $coreApiKeyValue := (randNumeric 36) | b64enc | quote }}
{{- $coreApiSecret := (lookup "v1" "Secret" .Release.Namespace "mdcore-api-key") }}

{{- if $coreApiSecret }}
{{- $coreApiKeyValue = index $coreApiSecret.data "value" }}
{{- end -}}

{{- if .Values.mdcore_api_key }}
{{- $coreApiKeyValue = .Values.mdcore_api_key | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdcore-api-key
  annotations:
    "helm.sh/resource-policy": keep
data:
  value: {{ $coreApiKeyValue }}


# Set or keep the MD Core license key
{{- $coreLicenseKeyValue := "SET_LICENSE_KEY_HERE" | b64enc | quote }}
{{- $coreLicenseSecret := (lookup "v1" "Secret" .Release.Namespace "mdcore-license-key") }}

{{- if $coreLicenseSecret }}
{{- $coreLicenseKeyValue = index $coreLicenseSecret.data "value" }}
{{- end -}}

{{- if .Values.mdcore_license_key }}
{{- $coreLicenseKeyValue = .Values.mdcore_license_key | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdcore-license-key
  annotations:
    "helm.sh/resource-policy": keep
data:
  value: {{ $coreLicenseKeyValue }}


{{ if .Values.additional_secrets }}
  {{ range $secret_name, $secret_data := .Values.additional_secrets }}
---
kind: Secret
apiVersion: v1
metadata:
  name: {{ $secret_name }}
data:
    {{- range $data_key, $data_value := . }}
  {{ $data_key }}: {{ $data_value | b64enc }}
    {{- end }}

  {{- end }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdcore-stack-configs
  annotations:
    "helm.sh/resource-policy": keep
stringData:
  IGNITION_JSON: |
    {
    "global/dbmode": {{ .Values.MDCORE_DB_MODE }},
    "dbserver/type": "{{ .Values.MDCORE_DB_TYPE }}",
    "dbserver/host": "{{ .Values.MDCORE_DB_HOST }}",
    "dbserver/port": "{{ .Values.MDCORE_DB_PORT }}",
    "dbserver/user": {{ $postgresUserValue | replace "\"" "" | b64dec | quote }},
    "dbserver/password": {{ $postgresPasswordValue | replace "\"" "" | b64dec | quote }},
    "user/name": {{ $coreUserValue | replace "\"" "" | b64dec | quote }}, 
    "user/password": {{ $corePasswordValue | replace "\"" "" | b64dec | quote }},
    "user/apikey":{{ $coreApiKeyValue | replace "\"" "" | b64dec | quote }}
{{- if and ($.Values.CONFIG_IMPORT_FILE) ($.Values.CONFIG_IMPORT_PASSWORD) }}
    "config/import": {{ printf "/opt/ometascan/system/export_config/%s" .Values.CONFIG_IMPORT_FILE | quote }},
    "config/import_password": {{ $.Values.CONFIG_IMPORT_PASSWORD | quote }},
    {{- if $.Values.IMPORT_FORCE_UPDATE_YARA }}
    "config/import_force_update_yara": {{ $.Values.IMPORT_FORCE_UPDATE_YARA | quote }},
    {{- end }}
{{- end }}
    "user/apikey":{{ $coreApiKeyValue | replace "\"" "" | b64dec | quote }}
    }

---


{{ end }}