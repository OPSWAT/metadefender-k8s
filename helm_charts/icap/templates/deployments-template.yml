# Create a deployment for each component in MD ICAP Server if it's enabled
{{ $component := .Values.icap_components.md_icapsrv }}
{{ $ENV := $component.env }}
{{ if $component.import_configuration.enabled }}
{{ $importTargets := dict "name" "IMPORT_CONF_FILE_TARGET" "value" (toJson $component.import_configuration.targets) }}
{{ $ENV = append $component.env $importTargets}}
{{- end }}
{{ $httpsSslProtocols  := dict "name" "HTTPS_SSL_PROTOCOLS" "value" (toJson $component.tls.https.tlsVersions) }}
{{ $icapsSslProtocols  := dict "name" "ICAPS_SSL_PROTOCOLS" "value" (toJson $component.tls.icaps.tlsVersions) }}
{{ $nginxsSslProtocols := dict "name" "NGINXS_SSL_PROTOCOLS" "value" (toJson $component.tls.nginxs.tlsVersions) }}
{{ $ENV = append $ENV $httpsSslProtocols }}
{{ $ENV = append $ENV $icapsSslProtocols }}
{{ $ENV = append $ENV $nginxsSslProtocols }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $component.name | quote }}
spec:
  replicas: {{ $component.replicas }}
  selector:
    matchLabels:
      app: {{ $component.name | quote }}
  {{- if $component.strategy }}
  strategy:
    {{- toYaml $component.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ $component.name | quote }}
        {{- if $component.extra_labels }}
          {{- toYaml $component.extra_labels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.icap_components.md_icapsrv.service_account_name }}
      {{- if $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml $.Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - envFrom:
            - configMapRef:
                name: mdicapsrv-env
          {{- if $component.custom_repo }}
          image: {{ printf "%s/%s" $.Values.icap_docker_repo $component.image | quote }}
          {{- else }}
          image: {{ $component.image | quote }}
          {{- end }}
          {{- if $ENV }}
          env:
            {{- toYaml $ENV | nindent 12 }}
          {{- end }}
          name: {{ $component.name | quote }}
          {{- if $component.ports }}
          ports:
            - containerPort: {{ $component.ports.rest }}
            - containerPort: {{ $component.ports.icap }}
            - containerPort: {{ $component.ports.icaps }}
        {{- if $component.nginx_support.enabled }}
            - containerPort: {{ $component.ports.nginx }}
            - containerPort: {{ $component.ports.nginxs }}
        {{- end }}
          {{- end }}
          imagePullPolicy: {{ $component.imagePullPolicy }}
          {{- if $.Values.healthcheck.enabled }}
          {{- if $component.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /readyz
              port: {{ $component.ports.rest }}
              {{- if $component.tls.https.enabled }}
              scheme: HTTPS
              {{- end }}
            initialDelaySeconds: {{ $component.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $component.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $component.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $component.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if $component.securityContext }}
          securityContext:
            {{- toYaml $component.securityContext | nindent 12 }}
          {{- end }}
          {{- if $component.readinessProbe }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ $component.ports.rest }}
              {{- if $component.tls.https.enabled }}
              scheme: HTTPS
              {{- end }}
            initialDelaySeconds: {{ $component.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $component.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $component.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $component.readinessProbe.failureThreshold }}
          {{- end }}
          {{- end }}
          {{- if (or $component.mountConfig $component.persistentDir $component.tls.https.enabled $component.import_configuration.enabled $component.tls.icaps.enabled $component.tls.nginxs.enabled $.Values.storage_configs.enabled $component.trustCertificate.enabled)}}
          volumeMounts:
            {{- if $component.mountConfig }}
            - name: {{ $component.mountConfig.configName }}
              mountPath: {{ $component.mountConfig.mountPath }}
              subPath: {{ $component.mountConfig.subPath }}
            {{- end }}
            {{- if $component.tls.https.enabled }}
            - name: {{ $component.tls.https.certSecret }}
              mountPath: {{  $component.tls.https.mountPath }}/mdicapsrv-https.crt
              subPath: {{ $component.tls.https.certSecretSubPath }}
            - name: {{ $component.tls.https.certKeySecret }}
              mountPath: {{ $component.tls.https.mountPath }}/mdicapsrv-https.key
              subPath: {{ $component.tls.https.certKeySecretSubPath }}
            {{- end }}
            {{- if $component.tls.icaps.enabled }}
            - name: {{ $component.tls.icaps.certSecret }}
              mountPath: {{  $component.tls.icaps.mountPath }}/mdicapsrv-icaps.crt
              subPath: {{ $component.tls.icaps.certSecretSubPath }}
            - name: {{ $component.tls.icaps.certKeySecret }}
              mountPath: {{ $component.tls.icaps.mountPath }}/mdicapsrv-icaps.key
              subPath: {{ $component.tls.icaps.certKeySecretSubPath }}
            {{- end }}
            {{- if $component.tls.nginxs.enabled }}
            - name: {{ $component.tls.nginxs.certSecret }}
              mountPath: {{ $component.tls.nginxs.mountPath }}/mdicapsrv-nginxs.crt
              subPath: {{ $component.tls.nginxs.certSecretSubPath }}
            - name: {{ $component.tls.nginxs.certKeySecret }}
              mountPath: {{ $component.tls.nginxs.mountPath }}/mdicapsrv-nginxs.key
              subPath: {{ $component.tls.nginxs.certKeySecretSubPath }}
            {{- end }}
            {{- if $component.import_configuration.enabled }}
            - name: {{ $component.import_configuration.importConfigMap }}
              mountPath: {{ printf "%s/%s" $component.import_configuration.importConfigPath  $component.import_configuration.importConfigMapSubPath }}
              subPath: {{ $component.import_configuration.importConfigMapSubPath }}
            {{- end }}
            {{- if $component.trustCertificate.enabled }}
            {{- range $component.trustCertificate.configs }}
            - name: {{ .certSecret }}
              mountPath: {{printf "%s/%s" $component.trustCertificate.mountPath .certSecretSubPath }}
              subPath: {{ .certSecretSubPath }}
            {{- end }}
            {{- end }}
            {{- if (and $.Values.storage_configs.enabled (and $.Values.icap_container_persistent (not $.Values.extra_storage_configs) ) ) }}
            - mountPath: "/opt/mdicapsrv/icap_data/var/lib/mdicapsrv"
              subPath: {{ $component.name }}
              name: {{ printf "%s-pvc" .Values.storage_configs.storageClassName }}
            {{- end }}
            {{- if $.Values.extra_storage_configs }}
            {{- if $component.extraVolumeMounts }}
              {{- toYaml $component.extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if $component.resources }}
          resources:
            {{- toYaml $component.resources | nindent 12 }}
          {{- end }}
          {{- if $component.sidecars }}
            {{- toYaml $component.sidecars | nindent 8 }}
          {{- end }}
      {{- if ($component.initContainers)}}
      {{- if (eq $component.database.db_type "remote")}}
      initContainers:
        {{- toYaml $component.initContainers | nindent 8 }}
      {{- end }}
      {{- end }}
      restartPolicy: Always
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $.Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if (or $component.tls.https.enabled $component.tls.icaps.enabled $component.tls.nginxs.enabled $component.import_configuration.enabled  $.Values.storage_configs.enabled $component.trustCertificate.enabled )}}
      volumes:
        {{- if $component.tls.https.enabled }}
        - name: {{ $component.tls.https.certSecret }}
          secret:
            secretName: {{ $component.tls.https.certSecret }}
        - name: {{ $component.tls.https.certKeySecret }}
          secret:
            secretName: {{ $component.tls.https.certKeySecret }}
        {{- end }}
        {{- if $component.tls.icaps.enabled }}
        - name: {{ $component.tls.icaps.certSecret }}
          secret:
            secretName: {{ $component.tls.icaps.certSecret }}
        - name: {{ $component.tls.icaps.certKeySecret }}
          secret:
            secretName: {{ $component.tls.icaps.certKeySecret }}
        {{- end }}
        {{- if $component.import_configuration.enabled }}
        - name: {{ $component.import_configuration.importConfigMap }}
          configMap:
            name: {{ $component.import_configuration.importConfigMap }}
        {{- end }}
        {{- if $component.tls.nginxs.enabled }}
        - name: {{ $component.tls.nginxs.certSecret }}
          secret:
            secretName: {{ $component.tls.nginxs.certSecret }}
        - name: {{ $component.tls.nginxs.certKeySecret }}
          secret:
            secretName: {{ $component.tls.nginxs.certKeySecret }}
        {{- end }}
        {{- if $component.trustCertificate.enabled }}
        {{- range $component.trustCertificate.configs }}
        - name: {{ .certSecret }}
          secret:
            secretName: {{ .certSecret }}
        {{- end }}
        {{- end }}
        {{- if (and $.Values.storage_configs.enabled (and $.Values.icap_container_persistent (not $.Values.extra_storage_configs) ) ) }}
        - name: {{ printf "%s-pvc" .Values.storage_configs.storageClassName }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-pvc" .Values.storage_configs.storageClassName }}
        {{- end }}
        {{- if $.Values.extra_storage_configs }}
        {{- if $component.extraVolumes -}}
          {{- range $volumeLabel, $volume := $component.extraVolumes }}
        -
            {{- toYaml $volume | nindent 10 }}
          {{- end }}
        {{- end }}
        {{- end }}        
      {{- end }}