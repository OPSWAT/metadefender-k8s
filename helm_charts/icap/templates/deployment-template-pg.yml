{{- if .Values.postgres_mdicapsrv.enabled }}

{{- if or (ne defined $component.name) (eq $component.name "") }}
{{- $component.name := "postgres-mdicapsrv" }}
{{- end }}

{{- if (eq .Values.icap_components.md_icapsrv.database.db_mode "4")}}
{{ $component := .Values.postgres_mdicapsrv }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $component.name | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $component.name | quote }}
  template:
    metadata:
      labels:
        app: {{ $component.name | quote }}
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: mdicapsrv-env
          {{- if $component.custom_repo }}
          image: {{ printf "%s/%s:%s" $.Values.icap_docker_repo $component.image $component.image_tag | quote }}
          {{ else }}
          image: {{ printf "%s:%s" $component.image $component.image_tag | quote }}
          {{- end }}
          {{- if $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml $.Values.imagePullSecrets | nindent 12 }}
          {{- end }}
          env:
            {{- toYaml $component.env | nindent 12 }}
          name: "postgres-mdicapsrv"
          ports:
            - containerPort: {{ $component.ports.rest }}
          {{- if $.Values.storage_configs.enabled }}
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: {{ printf "%s-pvc" .Values.storage_configs.storageClassName }}
              subPath: {{ $component.name }}
          {{- end }}
      restartPolicy: Always
      {{- if $.Values.storage_configs.enabled }}
      volumes:
        - name: {{ printf "%s-pvc" .Values.storage_configs.storageClassName }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-pvc" $.Values.storage_configs.storageClassName }}
      {{- end }}
{{- end }}
{{- end }}