---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mdicapsrv-env
  namespace: {{ .Release.Namespace }}
data:
  REST_PORT: {{ .Values.icap_components.md_icapsrv.ports.rest | quote }}
  ICAP_PORT: {{ .Values.icap_components.md_icapsrv.ports.icap | quote }}
  ICAPS_PORT: {{ .Values.icap_components.md_icapsrv.ports.icaps | quote }}
  HTTPS_CERT_PATH : {{ .Values.icap_components.md_icapsrv.tls.https.mountPath | quote }}
  ICAPS_CERT_PATH : {{ .Values.icap_components.md_icapsrv.tls.icaps.mountPath | quote }}
  NGINXS_CERT_PATH: {{ .Values.icap_components.md_icapsrv.tls.nginxs.mountPath | quote }}
  IMPORT_CONF_FILE : {{ printf "%s/%s" .Values.icap_components.md_icapsrv.import_configuration.importConfigPath  .Values.icap_components.md_icapsrv.import_configuration.importConfigMapSubPath  | quote }}
  ACTIVATION_SERVER: {{ .Values.activation_server }}
  AUDIT_DATA_RETENTION: {{ .Values.icap_components.md_icapsrv.data_retention.config_history | quote}}
  HISTORY_DATA_RETENTION: {{ .Values.icap_components.md_icapsrv.data_retention.processing_history | quote}}
  IMPORT_CONFIG_FILE_PASS: {{ .Values.icap_components.md_icapsrv.import_configuration.importConfigFilePass | quote }}
  ACCEPT_EULA: {{ .Values.ACCEPT_EULA | quote }}
{{- if .Values.icap_components.md_icapsrv.nginx_support.enabled }}
{{- $nginx := .Values.icap_components.md_icapsrv.nginx_support }}
  IGNITION_JSON: '{"nginxsupport/enabled":"{{$nginx.enabled}}", "nginxsupport/port":"{{$nginx.port}}", "nginxsupport/port_s":"{{$nginx.port_s}}"}'
{{- end }}
# # Uncomment for make ConfigMap for import configuration
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mdicapsrv-import-configuration
  namespace: {{ .Release.Namespace }}
{{- $file_path := printf "files/%s" .Values.icap_components.md_icapsrv.import_configuration.importConfigMapSubPath}}
{{- $root := . }}
{{- if .Values.icap_components.md_icapsrv.import_configuration.enabled }}
{{- if regexMatch "^.*\\.(zip)$" $file_path }}
binaryData:
  {{ base $file_path }}: {{ $root.Files.Get $file_path | b64enc | quote }}
{{- else if regexMatch "^.*\\.(json)$"  $file_path }}
data:
  {{ base $file_path }}: {{ toJson (.Files.Get $file_path )}}
{{- end }}
{{- end }}
# Generate, set or keep the MD ICAP Server credentials
{{- $icapPasswordValue := (randAlphaNum 24) | nospace | b64enc | quote }}
{{- $icapUserValue := "admin" | b64enc | quote }}
{{- $icapCredSecret := (lookup "v1" "Secret" .Release.Namespace "mdicapsrv-cred") }}
{{- if $icapCredSecret }}
{{- $icapPasswordValue = index $icapCredSecret.data "password" }}
{{- $icapUserValue = index $icapCredSecret.data "user" }}
{{- end -}}
{{- if .Values.mdicapsrv_password }}
{{- $icapPasswordValue = .Values.mdicapsrv_password | b64enc }}
{{- end -}}
{{- if .Values.mdicapsrv_user }}
{{- $icapUserValue = .Values.mdicapsrv_user | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdicapsrv-cred
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
  user: {{ $icapUserValue }}
  password: {{ $icapPasswordValue }}


# Generate, set or keep the MD ICAP Server API key
{{- $icapApiKeyValue := (randNumeric 36) | b64enc | quote }}
{{- $icapApiSecret := (lookup "v1" "Secret" .Release.Namespace "mdicapsrv-api-key") }}
{{- if $icapApiSecret }}
{{- $icapApiKeyValue = index $icapApiSecret.data "value" }}
{{- end -}}
{{- if .Values.mdicapsrv_api_key }}
{{- $icapApiKeyValue = .Values.mdicapsrv_api_key | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdicapsrv-api-key
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
  value: {{ $icapApiKeyValue }}

# Set or keep the MD ICAP Server license key
{{- $icapLicenseKeyValue := "SET_LICENSE_KEY_HERE" | b64enc | quote }}
{{- $icapLicenseSecret := (lookup "v1" "Secret" .Release.Namespace "mdicapsrv-license-key") }}
{{- if $icapLicenseSecret }}
{{- $icapLicenseKeyValue = index $icapLicenseSecret.data "value" }}
{{- end -}}
{{- if .Values.mdicapsrv_license_key }}
{{- $icapLicenseKeyValue = .Values.mdicapsrv_license_key | b64enc }}
{{- end }}

---
kind: Secret
apiVersion: v1
metadata:
  name: mdicapsrv-license-key
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
  value: {{ $icapLicenseKeyValue }}
---