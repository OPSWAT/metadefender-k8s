# Run these commands in the current project before deploying the chart for priviledged access
# oc create sa mdss
# oc adm policy add-scc-to-user privileged -z mdss -n mdss


persistance_enabled: false

mdss_components:
  mongodb:
    persistentDir: null
    securityContext:
      runAsUser: 0
    customPodDefinitions: 
      serviceAccountName: mdss
  redis:
    securityContext:
      runAsUser: 0
    customPodDefinitions: 
      serviceAccountName: mdss
  webclient:
    securityContext:
      runAsUser: 0
    customPodDefinitions: 
      serviceAccountName: mdss
    
  mongomigrations:
    command: ["/bin/sh","-c"]
    args: ['sh ./run.sh 2>&1']
    persistentDir: null
    customPodDefinitions: 
      serviceAccountName: mdss
    securityContext:
      runAsUser: 0
  apigateway:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.api.gateway.dll 2>&1']
    customPodDefinitions: 
      serviceAccountName: mdss
    securityContext:
      runAsUser: 0
  notificationservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.notification.service.dll 2>&1']
  licensingservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${MONGO_MIGRATIONS_HOST}":"${MONGO_MIGRATIONS_PORT}" -s -t 180 -- /wait-for-it.sh "${RABBITMQ_HOST}":"${RABBITMQ_PORT}" -s -t 180 -- dotnet opswat.mdcs.license.service.dll 2>&1']
    customPodDefinitions: 
      serviceAccountName: mdss
    securityContext:
      runAsUser: 0
  discoveryservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.service.dll 2>&1']
  scanningservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.scanning.service.dll 2>&1']
  jobdispatcher:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.job.dispatcher.dll 2>&1']
  securitychecklistservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.security.checklist.service.dll 2>&1']
  loadbalancerservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.load.balancer.service.dll 2>&1']
  loggingservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdcs.logging.service.dll 2>&1']
  remediationsservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.service.dll 2>&1']
  storagesservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.service.dll 2>&1']
  workflowmanagerservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.workflowmanager.service.dll 2>&1']
  usermanagementservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.usermanagement.service.dll 2>&1']
  discoveryamazonsdkservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.amazonsdk.service.dll 2>&1']
  remediationsservice-amazonsdk:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.amazonsdk.service.dll 2>&1']
  storagesservice-amazonsdk:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.amazonsdk.service.dll 2>&1']
  discoveryazureblobservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.azureblob.service.dll 2>&1']
  remediationsservice-azureblob:
    command: ["/bin/sh","-c"] 
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.azureblob.service.dll 2>&1']
  storagesservice-azureblob:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.azureblob.service.dll 2>&1']
  discoveryalibabacloudservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.alibabacloud.service.dll 2>&1']
  remediationsservice-alibabacloud:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.alibabacloud.service.dll 2>&1']
  storagesservice-alibabacloud:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.alibabacloud.service.dll 2>&1']
  discoverygooglecloudservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.googlecloud.service.dll 2>&1']
  remediationsservice-googlecloud:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.googlecloud.service.dll 2>&1']
  storagesservice-googlecloud:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.googlecloud.service.dll 2>&1']
  discoveryboxservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.box.service.dll 2>&1']
  remediationsservice-box:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.box.service.dll 2>&1']
  storagesservice-box:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.box.service.dll 2>&1']
  discoveryazurefilesservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.azurefiles.service.dll 2>&1']
  remediationsservice-azurefiles:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.azurefiles.service.dll 2>&1']
  storagesservice-azurefiles:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.azurefiles.service.dll 2>&1']
  discoverysmbservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.smb.service.dll 2>&1']
  remediationsservice-smb:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.smb.service.dll 2>&1']
  storagesservice-smb:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.smb.service.dll 2>&1']
  smbservice:
    command: ["/bin/sh","-c"]
    args: ['python -u /app/src/server.py "$SMBSERVICE_PORT" 2>&1']
  discoveryonedriveservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.onedrive.service.dll 2>&1']
  remediationsservice-onedrive:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.onedrive.service.dll 2>&1']
  storagesservice-onedrive:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.onedrive.service.dll 2>&1']
  discoverysftpservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.sftp.service.dll 2>&1']
  remediationsservice-sftp:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.sftp.service.dll 2>&1']
  storagesservice-sftp:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.sftp.service.dll 2>&1']
  sftpservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.sftp.service.dll 2>&1']
  discoverynfsservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.discovery.nfs.service.dll 2>&1']
  remediationsservice-nfs:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.remediations.nfs.service.dll 2>&1']
  storagesservice-nfs:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.storages.nfs.service.dll 2>&1']
  nfsservice:
    command: ["/bin/sh","-c"]
    args: ['/wait-for-it.sh "${LICENSINGSERVICE_HOST}":"${LICENSINGSERVICE_PORT}" -s -t 180 -- dotnet opswat.mdss.nfs.service.dll 2>&1']