{{- if .Values.mddc_generate_secrets}}

# Generate, set or keep the postgres database credentials
{{- $postgresPasswordValue := (randAlphaNum 24) | nospace | b64enc | quote }}
{{- $postgresUserValue := "postgres" | b64enc | quote }}
{{- $postgresSecret := (lookup "v1" "Secret" .Release.Namespace "mddc-common-secret") }}
{{- if $postgresSecret }}
{{- $postgresPasswordValue = index $postgresSecret.data "POSTGRES_PASSWORD" }}
{{- $postgresUserValue = index $postgresSecret.data "POSTGRES_USER" }}
{{- end -}}
{{- if .Values.env.postgresql_password }}
{{- $postgresPasswordValue = .Values.env.postgresql_password | b64enc }}
{{- end -}}
{{- if .Values.env.postgresql_user }}
{{- $postgresUserValue = .Values.env.postgresql_user | b64enc }}
{{- end }}

# Generate, set or keep the rabbitmq credentials
{{- $rabbitmqPasswordValue := (randAlphaNum 24) | nospace | b64enc | quote }}
{{- $rabbitmqUserValue := "admin" | b64enc | quote }}
{{- $rabbitmqSecret := (lookup "v1" "Secret" .Release.Namespace "mddc-common-secret") }}
{{- if $rabbitmqSecret }}
{{- $rabbitmqPasswordValue = index $rabbitmqSecret.data "RABBITMQ_DEFAULT_PASS" }}
{{- $rabbitmqUserValue = index $rabbitmqSecret.data "RABBITMQ_DEFAULT_USER" }}
{{- end -}}
{{- if .Values.env.rabbitmq_password }}
{{- $rabbitmqPasswordValue = .Values.env.rabbitmq_password | b64enc }}
{{- end -}}
{{- if .Values.env.rabbitmq_user }}
{{- $rabbitmqUserValue = .Values.env.rabbitmq_user | b64enc }}
{{- end }}

# Generate, set or keep the MD Core API key
{{- $coreApiKeyValue := (randNumeric 36) | b64enc | quote }}
{{- $coreApiSecret := (lookup "v1" "Secret" .Release.Namespace "mddc-common-secret") }}
{{- if $coreApiSecret }}
{{- $coreApiKeyValue = index $coreApiSecret.data "MDDC_APIKEY" }}
{{- end -}}
{{- if .Values.env.apikey }}
{{- $coreApiKeyValue = .Values.env.apikey | b64enc }}
{{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: mddc-common-secret
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_USER: {{ .Values.env.user | b64enc | quote }}
  MDDC_PASSWORD: {{ .Values.env.password | b64enc | quote }}
  MDDC_APIKEY: {{ $coreApiKeyValue }}
  MDDC_EMAIL: {{ .Values.env.email | b64enc | quote }}
  RABBITMQ_DEFAULT_USER: {{ .Values.env.rabbitmq_user | b64enc | quote }}
  RABBITMQ_DEFAULT_PASS: {{ .Values.env.rabbitmq_password | b64enc | quote }}
  POSTGRES_USER: {{ $postgresUserValue }}
  POSTGRES_PASSWORD: {{ $postgresPasswordValue }}
---
apiVersion: v1
kind: Secret
metadata:
  name: identity-service
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_IDENTITY_SERVICE_DB_USER: {{ default .Values.env.postgresql_user .Values.env.MDDC_IDENTITY_SERVICE_DB_USER | b64enc  | quote }}
  MDDC_IDENTITY_SERVICE_DB_PASSWORD: {{ default .Values.env.postgresql_password .Values.env.MDDC_IDENTITY_SERVICE_DB_PASSWORD | b64enc  | quote }}
  MDDC_IDENTITY_SERVICE_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_IDENTITY_SERVICE_CONNECTION_KEY | b64enc  | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: file-storage
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_FILE_STORAGE_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_FILE_STORAGE_CONNECTION_KEY | b64enc  | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: control-center
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_LAKE_DB_USER: {{ default .Values.env.postgresql_user .Values.env.MDDC_LAKE_DB_USER | b64enc  | quote }}
  MDDC_LAKE_DB_PASSWORD: {{ default .Values.env.postgresql_password .Values.env.MDDC_LAKE_DB_PASSWORD | b64enc  | quote }}
  MDDC_WAREHOUSE_DB_USER: {{ default .Values.env.postgresql_user .Values.env.MDDC_WAREHOUSE_DB_USER | b64enc  | quote }}
  MDDC_WAREHOUSE_DB_PASSWORD: {{ default .Values.env.postgresql_password .Values.env.MDDC_WAREHOUSE_DB_PASSWORD | b64enc  | quote }}
  MDDC_BROKER_USER: {{ .Values.env.rabbitmq_user | b64enc | quote }}
  MDDC_BROKER_PASSWORD: {{ .Values.env.rabbitmq_password | b64enc | quote }}
  MDDC_CONTROL_CENTER_DB_USER: {{ default .Values.env.postgresql_user .Values.env.MDDC_CONTROL_CENTER_DB_USER | b64enc  | quote }}
  MDDC_CONTROL_CENTER_DB_PASSWORD: {{ default .Values.env.postgresql_password .Values.env.MDDC_CONTROL_CENTER_DB_PASSWORD | b64enc  | quote }}
  MDDC_IDENTITY_SERVICE_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_IDENTITY_SERVICE_CONNECTION_KEY | b64enc  | quote }}
  MDDC_CONTROL_CENTER_ENCRYPTION_KEY: {{ default .Values.env.encryption_key .Values.env.MDDC_CONTROL_CENTER_ENCRYPTION_KEY | b64enc  | quote }}
  MDDC_FILE_STORAGE_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_FILE_STORAGE_CONNECTION_KEY | b64enc  | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: worker-api-gateway
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_WORKER_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_WORKER_CONNECTION_KEY | b64enc  | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: worker-core
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  MDDC_WORKER_CONNECTION_KEY: {{ default .Values.env.connection_key .Values.env.MDDC_WORKER_CONNECTION_KEY | b64enc  | quote }}
  MDDC_LICENSE_KEY: {{ default .Values.env.license_key .Values.env.MDDC_LICENSE_KEY | b64enc  | quote }}
---

{{ end }}