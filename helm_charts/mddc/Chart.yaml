apiVersion: v2
name: metadefender_distributed_cluster
description: This is a Helm chart for deploying MetaDefender Distributed Cluster (https://www.opswat.com/docs/mdcore/distributed-cluster-deployment) in a Kubernetes cluster

long_description: |
  This chart can deploy the following depending on the provided values:
  - All MetaDefender Distributed Cluster services in separate pods 
  - A PostgreSQL database instance pre-configured to be used by MetaDefender Distributed Cluster pods
  - A Redis Cache instance pre-configured to be used by MetaDefender Distributed Cluster pod
  - A RabbitMQ instance pre-configured to be used by MetaDefender Distributed Cluster pods

  ## Installation
  
  ### From source
  MetaDefender Distributed Cluster can be installed directly from the source code, here's an example using generic values:
  ```console
  git clone https://github.com/OPSWAT/metadefender-k8s.git metadefender
  cd metadefender/helm_carts
  helm install mddc ./mddc
  ```

  ### From the GitHub helm repo
  The installation can also be done using the helm repo which is updated on each release:
  ```console
  helm repo add mdk8s https://opswat.github.io/metadefender-k8s/
  helm repo update mdk8s
  helm install mddc mdk8s/metadefender_distributed_cluster
  ```

  ## Operational Notes
  The entire deployment can be customized by overwriting the chart's default configuration values. Here are a few points to look out for when changing these values:
  - By default, a PostgreSQL database is deployed alongside the MDDC deployment
  - In a production environment it's recommended to use an external service for the database  and set `deploy_with_mddc_db` to false in order to not deploy an in-cluster database

type: application

version: 2.3.0
appVersion: 2.3.0
